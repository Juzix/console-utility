#include "base.h"
#include <iostream>
#include <string.h>
#include <iomanip>
#include <limits>


using namespace std;


int main()
{
	const int MAX_LEN = 2048;
	char *p
	BYTE src[MAX_LEN];
	memset((void *)src, 0, MAX_LEN);
	int length = strlen(p);
	for (size_t i = 0; i < length; i+=2)
	{
		int a = (p[i] >= '0' && p[i] <= '9') ? (p[i] - '0') : (p[i] - 'A' + 10);
		int b = (p[i+1] >= '0' && p[i+1] <= '9') ? (p[i+1] - '0') : (p[i+1] - 'A' + 10);
		src[i / 2] = a * 16 + b;
	}
	
	BYTE dest[MAX_LEN];
	memset((void *)dest, 0, MAX_LEN);
	DWORD len = 0;

	cout << p << endl;


	web3RlpRemoveVRS((const BYTE *)src, dest, &len);
	for (size_t i = 0; i < len; i++)
	{
		if ((int)dest[i]<15) cout << "0";
		cout << hex << (int)dest[i];
	}

	cout << endl << " len = " << len <<endl;
	return 0;
}